
/*
	Make document from code

	@author ijse
 */
var dataHelper, ejs, fs, makeDoc, makeHtml, path, writeToFile;

path = require("path");

fs = require("fs");

dataHelper = require("./lib/dataHelper");

ejs = require("ejs");

exports.init = function(opts) {
  return this.on("commandinit", function(cmd) {
    return cmd.command('doc').option('-f, --backend <folder>', 'The backend folder').option('-d, --destination <dest>', 'Where to save the doc').description('Show help').action(function(cmd) {
      var bkPath, destPath;
      bkPath = cmd.backend;
      if (bkPath[0] === ".") {
        bkPath = path.join(process.cwd(), bkPath);
      }
      destPath = cmd.destination;
      if (destPath[0] === ".") {
        destPath = path.join(process.cwd(), destPath);
      }
      makeDoc(bkPath, destPath);
      return process.exit();
    });
  });
};

exports.makeDoc = makeDoc = function(bpath, toFile) {
  var html, objList, tpl, tplCnt;
  tpl = "" + __dirname + "/template/backbone-style.ejs";
  tplCnt = fs.readFileSync(tpl);
  objList = dataHelper.getDataObj(bpath);
  html = makeHtml({
    data: objList
  }, "" + tplCnt);
  writeToFile(toFile, html);
};

makeHtml = function(objList, template) {
  var tpl;
  tpl = ejs.compile(template, {
    compileDebug: true
  });
  return tpl(objList);
};

writeToFile = function(filename, html) {
  return fs.writeFileSync(filename, html);
};
