
/*
	Module Loader

		Load every modules in ./
		except it's name suffered with `_disable`
 */
var defaultConfig, fedUtil;

fedUtil = require("../utils");

defaultConfig = require("./config.coffee");

exports.init = function(gConfig) {
  var e, mod, modConfig, _base, _results;
  _results = [];
  for (mod in defaultConfig) {
    if (!defaultConfig[mod].enable) {
      continue;
    }
    try {
      modConfig = fedUtil.extend(defaultConfig[mod], gConfig[mod]);
      _results.push(typeof (_base = require("./" + mod)).init === "function" ? _base.init(modConfig) : void 0);
    } catch (_error) {
      e = _error;
      _results.push(console.error("Load module [" + mod + "] failed! \n " + e));
    }
  }
  return _results;
};

exports.initCommand = function() {
  var cmdMap, cmdName, config, e, mod;
  cmdMap = {};
  for (mod in defaultConfig) {
    cmdName = mod;
    config = defaultConfig[mod];
    if (!(config.enable && config.command)) {
      continue;
    }
    try {
      cmdName = config.command.name;
      cmdMap[cmdName] = {
        name: cmdName,
        fn: require("./" + mod).exec,
        options: config.command.options,
        showHelp: config.command.manual
      };
    } catch (_error) {
      e = _error;
      console.error("Load module [" + mod + "] failed! \n " + e);
    }
  }
  return cmdMap;
};
