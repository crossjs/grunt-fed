
/**
 * Utils for fed_2html
 *
 * @author ijse
 */
;
var fs, mkdirParent, mkdirs, mkdirsSync, path;

path = require("path");

fs = require("fs");

exports.joinPath = path.join;

exports.realPath = function(filePath) {
  if (filePath[0] === ".") {
    return path.join(process.cwd(), filePath);
  } else {
    return path.normalize(filePath);
  }
};

mkdirParent = function(dirPath, mode, callback) {
  return fs.mkdir(dirPath, mode, function(error) {
    if ((error != null ? error.errno : void 0) === 34) {
      mkdirParent(path.dirname(dirPath), mode, callback);
      mkdirParent(dirPath, mode, callback);
    }
    return typeof callback === "function" ? callback(error) : void 0;
  });
};

mkdirs = function(dirpath, callback) {
  return fs.exists(dirpath, function(exists) {
    if (exists) {
      return callback(dirpath);
    } else {
      return mkdirs(path.dirname(dirpath), function() {
        return fs.mkdir(dirpath, callback);
      });
    }
  });
};

mkdirsSync = function(dirpath) {
  if (fs.existsSync(dirpath)) {

  } else {
    return mkdirs(path.dirname(dirpath));
  }
};

exports.mkdirs = mkdirs;

exports.mkdirsSync = mkdirsSync;

exports.mkdirParent = mkdirParent;

exports.writeToFile = function(data, file, encoding, callback) {
  return fs.writeFileSync(file, data, encoding, callback);
};

exports.mergeData = function(obj1, obj2) {
  var k;
  for (k in obj1) {
    obj2[k] = obj1[k];
  }
  return obj2;
};
