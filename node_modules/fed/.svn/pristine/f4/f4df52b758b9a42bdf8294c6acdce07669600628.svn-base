var fedUtil, fs, initPrompt, path, prompt, schema;

fs = require("fs");

prompt = require("prompt");

fedUtil = require("../../utils/index");

path = require("path");

schema = {
  properties: {
    fileName: {
      description: "Config file name:",
      "default": "./config.json",
      required: true
    },
    port: {
      description: "HTTP Service port:",
      "default": "3000"
    },
    path: {
      description: "Resource path",
      type: "object",
      properties: {
        view: {
          description: "ftl",
          "default": "./view"
        },
        mock: {
          description: "mock files",
          "default": "./mock"
        },
        "public": {
          description: "static files",
          "default": "./webapp"
        }
      }
    }
  }
};

initPrompt = function() {
  prompt.message = "?> ".green;
  prompt.delimiter = "";
  prompt.override = args;
  return prompt;
};

exports.exec = function(args, cmdConfig) {
  prompt.message = "?> ".green;
  prompt.delimiter = "";
  prompt.override = args;
  prompt.start();
  prompt.get(schema, function(err, result) {
    var fileName;
    fileName = result.fileName;
    delete result.fileName;
    result.globals = {};
    fedUtil.mkdirSync(path.dirname(fileName));
    fs.writeFileSync(fileName, JSON.stringify({
      server: result
    }, null, 4), "utf-8");
    console.log("\nSuccess!".green + (" Now you can edit " + fileName + " as you want!"));
    return console.log("Start fed:".blue + (" $> fed server " + fileName));
  });
};
