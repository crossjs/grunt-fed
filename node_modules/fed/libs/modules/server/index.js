var childProcess, fedUtil, launchServer, launchWatcher, loadConfig, pChild, path, watch;

path = require("path");

watch = require("nodewatch");

fedUtil = require("../../utils");

childProcess = require("child_process");

pChild = null;

exports.exec = function(argv, config) {
  var cfgFile, gConfig;
  cfgFile = argv._[0];
  if (cfgFile) {
    gConfig = loadConfig(cfgFile);
    gConfig.port = argv.port || gConfig.port || 3000;
  } else {
    console.error("Need config file!");
    process.exit(0);
  }
  launchServer(gConfig);
  if (argv.watch) {
    return launchWatcher(gConfig);
  }
};

loadConfig = function(fileName) {
  var configFile, configd, configs, cwd, serverConfigs;
  cwd = process.cwd();
  configFile = fedUtil.realPath(cwd, fileName);
  configs = require(configFile);
  serverConfigs = configs.server;
  configd = path.dirname(configFile);
  serverConfigs.path.view = fedUtil.realPath(configd, serverConfigs.path.view);
  serverConfigs.path.mock = fedUtil.realPath(configd, serverConfigs.path.mock);
  serverConfigs.path["public"] = fedUtil.realPath(configd, serverConfigs.path["public"]);
  return configs;
};

launchServer = function(gConfig) {
  pChild = childProcess.fork(path.join(__dirname, "./dispatcher.js"), null, {
    silent: true,
    stdio: [process.stdin, process.stdout]
  });
  pChild.stdout.on("data", function(data) {
    return process.stdout.write(data);
  });
  pChild.stderr.on("data", function(data) {
    pChild.dead = true;
    return process.stderr.write(data);
  });
  pChild.send({
    signal: "SIG_START_SERVER",
    config: gConfig
  });
  pChild.on("message", function(localServerInstance) {});
  return pChild;
};

launchWatcher = function(gConfig) {
  watch.add(gConfig.server.path.mock, true).add(gConfig.server.path.view, true).onChange(function(file, prev, curr, action) {
    console.log('[%s] [%s], restarting...', file, action);
    if (pChild.dead) {
      pChild.kill("SIGTERM");
      pChild = null;
      return launchServer(gConfig);
    } else {
      pChild.on("exit", function() {
        return launchServer(gConfig);
      });
      pChild.kill("SIGTERM");
      return pChild = null;
    }
  });
};
