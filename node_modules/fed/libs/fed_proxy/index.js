
/*
	Proxy Server

	@author ijse
 */
var ProxyInstance, createServer, httpProxy, path, proxyServerMidleware;

httpProxy = require("http-proxy");

path = require("path");

ProxyInstance = null;

proxyServerMidleware = function(req, res, next) {
  var buffer, proxySetting, sfile;
  sfile = path.join(req.app.get('static resource'), req.path);
  if (path.existsSync(sfile)) {
    next();
  }
  buffer = httpProxy.buffer(req);
  proxySetting = req.app.get('proxy setting');
  return ProxyInstance.proxyRequest(req, res, {
    host: proxySetting.remote.host,
    port: proxySetting.remote.port,
    buffer: buffer
  });
};

createServer = function(pSetting) {
  return httpProxy.createServer({
    router: pSetting.router
  });
};

exports.init = function(config) {
  return this.on("appinit3", function(app) {
    app.enable('trust proxy');
    config = app.get("proxy setting");
    ProxyInstance = new httpProxy.RoutingProxy();
    app.use(function(req, res, next) {
      req.removeAllListeners('data');
      req.removeAllListeners('end');
      next();
      return process.nextTick(function() {
        req.emit('data', JSON.stringify(req.body));
        return req.emit('end');
      });
    });
    return app.use(proxyServerMidleware);
  });
};
